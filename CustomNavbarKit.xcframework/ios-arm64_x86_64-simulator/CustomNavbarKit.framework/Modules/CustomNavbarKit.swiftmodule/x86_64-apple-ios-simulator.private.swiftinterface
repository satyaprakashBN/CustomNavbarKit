// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1 effective-5.10 (swiftlang-6.1.0.110.21 clang-1700.0.13.3)
// swift-module-flags: -target x86_64-apple-ios18.4-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name CustomNavbarKit
// swift-module-flags-ignorable:  -interface-compiler-version 6.1
import Foundation
import Swift
import SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public struct NavbarButton : Swift.Identifiable {
  public let id: Foundation.UUID
  public let icon: SwiftUICore.Image
  public let action: () -> Swift.Void
  public init(icon: SwiftUICore.Image, action: @escaping () -> Swift.Void)
  public typealias ID = Foundation.UUID
}
@_Concurrency.MainActor @preconcurrency public struct CustomNavbarView : SwiftUICore.View {
  @_Concurrency.MainActor @preconcurrency public init(logo: SwiftUICore.Image? = nil, title: Swift.String, rightButtons: [CustomNavbarKit.NavbarButton] = [], backgroundColor: SwiftUICore.Color = Color(.systemBackground))
  @_Concurrency.MainActor @preconcurrency public var body: some SwiftUICore.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s15CustomNavbarKit0aB4ViewV4bodyQrvp", 0) __
}
extension CustomNavbarKit.CustomNavbarView : Swift.Sendable {}
